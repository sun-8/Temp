/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-12 01:49:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("jar:file:/C:/learn2weeks/workspase/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/spring-webmvc-3.1.1.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1329370132000L));
    _jspx_dependants.put("jar:file:/C:/learn2weeks/workspase/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/learn2weeks/workspase/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1635748692989L));
    _jspx_dependants.put("jar:file:/C:/learn2weeks/workspase/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-3.1.1.RELEASE.jar", Long.valueOf(1635748693129L));
    _jspx_dependants.put("/WEB-INF/views/common/common.jsp", Long.valueOf(1635748693196L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<script src=\"/resources/js/jquery-1.10.2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	var $j = jQuery.noConflict();\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>boardWrite</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	$j(document).ready(function(){\r\n");
      out.write("		\r\n");
      out.write("		$j(\".hide\").hide();\r\n");
      out.write("\r\n");
      out.write("		var $n = \"1\";\r\n");
      out.write("		$n++;\r\n");
      out.write("		/*\r\n");
      out.write("		var $a는 jQuery변수\r\n");
      out.write("		jQuery에서 사용하는 내장 함수들을 모두 사용할 수 있다.\r\n");
      out.write("		jQuery에서만 사용하는 메서드가 있는데 일반적인 javascript변수로는 적용이 안된다.\r\n");
      out.write("		jQuery변수는 모든 스크립트 사용이 가능\r\n");
      out.write("		*/\r\n");
      out.write("		\r\n");
      out.write("		$j(\"#submit\").on(\"click\",function(){\r\n");
      out.write("			var $frm = $j('.boardWrite tbody tbody :input');\r\n");
      out.write("			var param = $frm.serialize();\r\n");
      out.write("			\r\n");
      out.write("			$j.ajax({\r\n");
      out.write("			    url : \"/board/boardWriteAction.do\",\r\n");
      out.write("			    dataType: \"json\",\r\n");
      out.write("			    type: \"POST\",\r\n");
      out.write("			    data : param,\r\n");
      out.write("			    success: function(data, textStatus, jqXHR)\r\n");
      out.write("			    {\r\n");
      out.write("					alert(\"작성완료\");\r\n");
      out.write("					\r\n");
      out.write("					alert(\"메세지:\"+data.success);\r\n");
      out.write("					\r\n");
      out.write("					location.href = \"/board/boardList.do?pageNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("			    },\r\n");
      out.write("			    error: function (jqXHR, textStatus, errorThrown)\r\n");
      out.write("			    {\r\n");
      out.write("			    	alert(\"실패\");\r\n");
      out.write("			    }\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		//행추가\r\n");
      out.write("		$j(\"#row\").on(\"click\",function(){\r\n");
      out.write("//			$j(\".tbody:last\").after($j(\".tbody\").html());\r\n");
      out.write("//			$j(\".del\").show();\r\n");
      out.write("			\r\n");
      out.write("			$j(\"#writer\").before($j(\".hide\").html());\r\n");
      out.write("			\r\n");
      out.write("			$j(\".hide:last tr:first-child select\").attr(\"name\",\"boardVoList[\"+$n+\"].boardType\");\r\n");
      out.write("			$j(\".hide:last tr:nth-child(2) input\").attr(\"name\",\"boardVoList[\"+$n+\"].boardTitle\");\r\n");
      out.write("			$j(\".hide:last tr:last-child textarea\").attr(\"name\",\"boardVoList[\"+$n+\"].boardComment\");\r\n");
      out.write("			//기존에 만들었던 .hide는 hide()처리가 되었기 때문에 요소를 숨겨서 요소가 없는 것으로 인식하는 것 같다.\r\n");
      out.write("			//그래서 :last를 적용해도 마지막 요소의 name이 바뀌지 않는 것 같다.\r\n");
      out.write("			\r\n");
      out.write("			$n++;\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		//행삭제\r\n");
      out.write("		$j(document).on(\"click\",\"button[class='del']\",function delHtml(){\r\n");
      out.write("			$j(this).parent().parent().next().next().remove();\r\n");
      out.write("			$j(this).parent().parent().next().remove();\r\n");
      out.write("			$j(this).parent().parent().remove();\r\n");
      out.write("			\r\n");
      out.write("//			$n=1;\r\n");
      out.write("//			\r\n");
      out.write("//			for(var $i=1; $i<$j(\".hide\").length; i++){\r\n");
      out.write("//				$j(\".hide:nth-child(\"+$i+\") tr:first-child select\").attr(\"name\",\"boardVoList[\"+$n+\"].boardType\");\r\n");
      out.write("//				$j(\".hide:nth-child(\"+$i+\") tr:nth-child(2) input\").attr(\"name\",\"boardVoList[\"+$n+\"].boardTitle\");\r\n");
      out.write("//				$j(\".hide:nth-child(\"+$i+\") tr:last-child textarea\").attr(\"name\",\"boardVoList[\"+$n+\"].boardComment\");\r\n");
      out.write("//				\r\n");
      out.write("//				$i++;\r\n");
      out.write("//				$n++;\r\n");
      out.write("//			}\r\n");
      out.write("		});\r\n");
      out.write("		/*\r\n");
      out.write("			동적 태그일 경우, document.ready의 이벤트가 작동하지 x \r\n");
      out.write("			document.ready는 화면이 최조에 로드 되었을 때 화면 안에 있는 태그들에 이벤트를 건다.\r\n");
      out.write("			그래서 로드 되었을 때 존재하지 않는 태그에 대해서 이벤트를 걸 수 없는 것이다\r\n");
      out.write("		*/\r\n");
      out.write("\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("<form class=\"boardWrite\">\r\n");
      out.write("	\r\n");
      out.write("	<table align=\"center\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"right\">\r\n");
      out.write("			<input id=\"submit\" type=\"button\" value=\"작성\">\r\n");
      out.write("			<input id=\"row\" type=\"button\" value=\"행추가\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr class=\"write\">\r\n");
      out.write("			<td>\r\n");
      out.write("				<table border =\"1\" align=\"center\" id=\"test\">\r\n");
      out.write("					<tr class=\"type\">\r\n");
      out.write("						<td width=\"120\" align=\"center\">\r\n");
      out.write("						Type\r\n");
      out.write("						</td>\r\n");
      out.write("						<td>\r\n");
      out.write("							<select name=\"boardVoList[0].boardType\">\r\n");
      out.write("								");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("							</select>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td width=\"120\" align=\"center\">\r\n");
      out.write("						Title\r\n");
      out.write("						</td>\r\n");
      out.write("						<td width=\"400\">\r\n");
      out.write("						<input name=\"boardVoList[0].boardTitle\" type=\"text\" size=\"50\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> \r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td height=\"300\" align=\"center\">\r\n");
      out.write("						Comment\r\n");
      out.write("						</td>\r\n");
      out.write("						<td valign=\"top\">\r\n");
      out.write("						<textarea name=\"boardVoList[0].boardComment\"  rows=\"20\" cols=\"55\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardComment}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr id=\"writer\">\r\n");
      out.write("						<td align=\"center\">\r\n");
      out.write("						Writer\r\n");
      out.write("						</td>\r\n");
      out.write("						<td>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					<thead class=\"hide\">\r\n");
      out.write("					<tr class=\"type\">\r\n");
      out.write("						<td width=\"120\" align=\"center\">\r\n");
      out.write("						Type\r\n");
      out.write("						</td>\r\n");
      out.write("						<td>\r\n");
      out.write("							<select name=\"boardVoList[1].boardType\">\r\n");
      out.write("								");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("							</select>\r\n");
      out.write("							<button class=\"del\" style=\"float:right;\">삭제</button>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td width=\"120\" align=\"center\">\r\n");
      out.write("						Title\r\n");
      out.write("						</td>\r\n");
      out.write("						<td width=\"400\">\r\n");
      out.write("						<input name=\"boardVoList[1].boardTitle\" type=\"text\" size=\"50\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> \r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td height=\"300\" align=\"center\">\r\n");
      out.write("						Comment\r\n");
      out.write("						</td>\r\n");
      out.write("						<td valign=\"top\">\r\n");
      out.write("						<textarea name=\"boardVoList[1].boardComment\" rows=\"20\" cols=\"55\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardComment}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("				</table>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"right\">\r\n");
      out.write("				<a href=\"/board/boardList.do\">List</a>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("\r\n");
      out.write("</form>	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/board/boardWrite.jsp(112,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/boardWrite.jsp(112,8) '${boardTypeList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${boardTypeList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/board/boardWrite.jsp(112,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("type");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("									<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type.code_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type.code_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("								");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/board/boardWrite.jsp(150,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/boardWrite.jsp(150,8) '${boardTypeList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${boardTypeList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/board/boardWrite.jsp(150,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("type");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("									<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type.code_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type.code_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("								");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
